<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- VARIABLES -->
	<variable name="AddonLabel2">
		<value condition="!String.IsEmpty(ListItem.Property(Addon.Status))">$INFO[ListItem.Property(Addon.Status)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonSize)">$INFO[ListItem.AddonSize]</value>
	</variable>
	<variable name="MusicInfoHeader">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(Albums)">$INFO[ListItem.Album]</value>
		<value condition="Container.Content(Songs)">$INFO[ListItem.Title]</value>
	</variable>
	<variable name="MusicInfoLabel">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(Albums)">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(Songs)">$INFO[ListItem.Comment]</value>
	</variable>
	<variable name="MusicInfoListThumb">
		<value condition="Container.Content(Artists) + !String.IsEmpty(Container(50).Listitem.Icon)">$INFO[Container(50).Listitem.Icon]</value>
		<value condition="[Container.Content(Albums) | Container.Content(Songs)] + !String.IsEmpty(Container.Art(artist.thumb))">$INFO[Container.Art(artist.thumb)]</value>
		<value condition="Container.Content(Artists)">DefaultAlbumCover.png</value>
		<value condition="Container.Content(Albums) | Container.Content(Songs)">DefaultArtist.png</value>
	</variable>
	<variable name="MediaInfoOverlayVar">
		<value condition="ListItem.IsCollection">flagging/video/Set.png</value>
		<value condition="!ListItem.IsStereoscopic">$INFO[ListItem.VideoResolution,flagging/lists/,.png]</value>
		<value>flagging/lists/3D.png</value>
	</variable>
	<variable name="BannerThumb">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="PosterThumb">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="MusicInfoPanelLabel">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Label]</value>
		<value condition="Container.Content(Songs)">$INFO[ListItem.Label,[COLOR=selected][B],[/B][/COLOR] - ]$INFO[ListItem.Label2]</value>
		<value>$INFO[ListItem.TrackNumber,([COLOR=selected][B],[/B][/COLOR]) - ]$INFO[ListItem.Label]</value>
	</variable>
	<variable name="PlayList">
		<value condition="Window.IsActive(Videos) + !String.IsEqual(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
		<value>ActivateWindow(musicplaylist)</value>
	</variable>
	<variable name="SelectBack">
		<value condition="![Window.IsVisible(FullscreenVideo) | Window.IsVisible(Visualisation)]">DialogBack.png</value>
		<value>DialogBack2.png</value>
	</variable>
	<variable name="typehackflagging">
		<value condition="[String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,brrip) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)]">bluray</value>
		<value condition="String.Contains(ListItem.FilenameAndPath,hddvd)">hddvd</value>
		<value condition="String.Contains(ListItem.FilenameAndPath,dvd)">dvd</value>
		<value condition="[String.Contains(ListItem.FilenameAndPath,pdtv) | String.Contains(ListItem.FilenameAndPath,hdtv) | String.Contains(ListItem.FilenameAndPath,dsr)]">TV</value>
		<value condition="String.Contains(ListItem.FilenameAndPath,vhs)">vhs</value>
	</variable>
	<variable name="rating">
		<value condition="String.Contains(listitem.mpaa,Rated G)">mpaa_general</value>
		<value condition="String.Contains(listitem.mpaa,Rated PG-13)">mpaa_pg13</value>
		<value condition="String.Contains(listitem.mpaa,Rated PG)">mpaa_pg</value>
		<value condition="String.Contains(Listitem.mpaa,Rated R)">mpaa_restricted</value>
		<value condition="String.Contains(Listitem.mpaa,Rated NC)">mpaa_nc17</value>
		<value condition="String.Contains(Listitem.mpaa,Not Rated)">mpaa_notrated</value>
	</variable>
	<variable name="videocodec">
		<value condition="[String.StartsWith(ListItem.VideoCodec,div) | String.IsEqual(ListItem.VideoCodec,dx50)]">divx</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>
	<variable name="SeekLabel">
		<value condition="Player.IsTempo + String.StartsWith(Player.PlaySpeed,0.)">$LOCALIZE[31045]</value>
		<value condition="Player.IsTempo + String.StartsWith(Player.PlaySpeed,1.)">$LOCALIZE[31044]</value>
		<value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek">$LOCALIZE[31042]</value>
		<value condition="[Player.Paused + !Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">$LOCALIZE[31043]</value>
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">$LOCALIZE[15107] $INFO[Player.CacheLevel]%</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">$LOCALIZE[31046][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">$LOCALIZE[31046][COLOR=grey] $INFO[Player.SeekOffset][/COLOR]</value>
		<value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[31046]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31044]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31045]</value>
	</variable>
	<variable name="SelectLabel">
		<value condition="Control.IsVisible(3)">([COLOR=blue]$INFO[Container(3).NumItems][/COLOR]) $LOCALIZE[31025] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(3).CurrentPage]/$INFO[Container(3).NumPages][/COLOR])</value>
		<value condition="Control.IsVisible(6)">([COLOR=blue]$INFO[Container(6).NumItems][/COLOR]) $LOCALIZE[31025] - $LOCALIZE[31024] ([COLOR=blue]$INFO[Container(6).CurrentPage]/$INFO[Container(6).NumPages][/COLOR])</value>
	</variable>
	<variable name="PlayerControlsRepeatImageVar">
		<value condition="Playlist.IsRepeatOne + Control.HasFocus(704)">OSDRepeatOneFO.png</value>
		<value condition="Playlist.IsRepeat + Control.HasFocus(704)">OSDRepeatAllFO.png</value>
		<value condition="Control.HasFocus(704)">OSDRepeatFO.png</value>
		<value condition="Playlist.IsRepeatOne">OSDRepeatOneNF.png</value>
		<value condition="Playlist.IsRepeat">OSDRepeatAllNF.png</value>
		<value>OSDRepeatNF.png</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording">PVR-IsRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">PVR-HasTimer.png</value>
	</variable>
	<variable name="PVRTimerLabel">
		<value condition="ListItem.IsRecording">$LOCALIZE[19043]</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">$LOCALIZE[19057]</value>
		<value condition="ListItem.HasTimer">$LOCALIZE[31510]</value>
	</variable>
</includes>